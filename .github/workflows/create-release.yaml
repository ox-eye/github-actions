---
name: Create Release
on:
  push:
    tags: ['*']
  workflow_dispatch:
jobs:
  prepare:
    name: Initial preparation and setup
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.prepare.outputs.next_version }}
      release: ${{ steps.prepare.outputs.next_release }}
      tag: ${{ steps.prepare.outputs.next_tag }}
    steps:
      - uses: actions/checkout@v3
      - name: Prepare
        id: prepare
        uses: ./.github/actions/prepare

  build-docker-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: oxeye-scan
            context: images
            dockerfile: images/Dockerfile.oxeye-scan
    steps:
      - uses: actions/checkout@v3
      - name: Docker build
        uses: ./.github/actions/docker-build
        with:
          GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          registry_token: ${{ secrets.GITHUB_TOKEN }}
          image: ${{ matrix.image }}
          dockerfile: ${{ matrix.dockerfile }}
          context: ${{ matrix.context }}
          push_latest: 'false'
  
  update-github-actions:
    name: Update Image Version in the related action.yaml files
    needs: [build-docker-images, prepare] 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update action
        uses: fjogeleit/yaml-update-action@main
        with:
          branch: main
          createPR: false
          changes: |
            {
              "oxeye-scan/action.yaml": {
                "runs.image": "docker://ghcr.io/ox-eye/github-actions/oxeye-scan:${{ needs.prepare.outputs.tag }}"
              },
              "oxeye-scan/gitlab-ci.yaml": {
                "oxeye_code_scan.image.name": "ghcr.io/ox-eye/github-actions/oxeye-scan:${{ needs.prepare.outputs.tag }}"
              }
            }
          message: '[skip ci] Update Docker Image Version for GitHub and GitLab actions to ${{ needs.prepare.outputs.tag }}'
